<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzq.beauty.mapper.CareRecordMapper" >
  <resultMap id="BaseResultMap" type="com.zzq.beauty.model.CareRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="personId" property="personid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="goodsId" property="goodsid" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="updateDate" property="updatedate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, personId, userId, goodsId, createDate, updateDate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from carerecord
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from carerecord
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzq.beauty.model.CareRecord" >
    insert into carerecord (id, personId, userId, 
      goodsId, createDate, updateDate
      )
    values (#{id,jdbcType=INTEGER}, #{personid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{goodsid,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, #{updatedate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzq.beauty.model.CareRecord" >
    insert into carerecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="personid != null" >
        personId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="goodsid != null" >
        goodsId,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="updatedate != null" >
        updateDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="personid != null" >
        #{personid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null" >
        #{goodsid,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzq.beauty.model.CareRecord" >
    update carerecord
    <set >
      <if test="personid != null" >
        personId = #{personid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null" >
        goodsId = #{goodsid,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null" >
        updateDate = #{updatedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzq.beauty.model.CareRecord" >
    update carerecord
    set personId = #{personid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      goodsId = #{goodsid,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      updateDate = #{updatedate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="java.lang.String" resultType="java.util.HashMap">
    SELECT
    carerecord.id,
    p.`name` AS `user`,
    (
    SELECT
    `name`
    FROM
    person
    WHERE
    person.id = p.userId
    ) AS technician,
    carerecord.goodsId,
    carerecord.createDate
    FROM
    carerecord,
    person AS p
    WHERE
    carerecord.personId = p.id
    AND p.`name` LIKE #{keyWord}
    ORDER BY carerecord.createDate DESC
  </select>

  <select id="getBetweenTimeCount" resultType="java.lang.Long">
    SELECT COUNT(*) FROM carerecord WHERE carerecord.createDate &gt;=#{startDate} AND carerecord.createDate &lt;=#{endDate}
  </select>
</mapper>